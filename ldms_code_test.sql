--Crete Table DEPARTMENT FILES
CREATE TABLE DEPT_DATA (DEPARTMENT_ID NUMBER(5) NOT NULL, DEPARTMENT_NAME VARCHAR(50) NOT NULL, LOCATION VARCHAR(50) NOT NULL,constraint pk_DEPT_DATA primary key (DEPARTMENT_ID) );

--Crete Table EMPLOYEES FILES
CREATE TABLE EMP_DATA (EMPLOYEE_ID NUMBER(10) NOT NULL, EMPLOYEE_NAME VARCHAR(50) NOT NULL, JOB_TITLE VARCHAR(50) NOT NULL, MANAGER_ID NUMBER(10), DATE_HIRED DATE NOT NULL, SALARY NUMBER(10) NOT NULL, DEPARTMENT_ID NUMBER(5)NOT NULL, constraint pk_EMP_DATA primary key (EMPLOYEE_ID), constraint fk_DEPARTMENT_ID foreign key (DEPARTMENT_ID) references dept (DEPARTMENT_ID)   );

--INSERT INTO DEPARTMENT FILES
INSERT INTO DEPT_DATA(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION)values('1','Management','London');
INSERT INTO DEPT_DATA(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION)values('2','Engineering','Cardiff');
INSERT INTO DEPT_DATA(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION)values('3','Research & Development','Edinburgh');
INSERT INTO DEPT_DATA(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION)values('4','Sales','Belfast');

--INSERT INTO EMPLOYEES FILES
INSERT INTO EMP_DATA(EMPLOYEE_ID, EMPLOYEE_NAME, JOB_TITLE, DATE_HIRED, SALARY, DEPARTMENT_ID)values('90001','John Smith','CEO','01/01/95','100000', '1');
INSERT INTO EMP_DATA(EMPLOYEE_ID,EMPLOYEE_NAME,JOB_TITLE,MANAGER_ID,DATE_HIRED,SALARY,DEPARTMENT_ID)values('90002','Jimmy Willis ','Manager','90001','23/09/03','52500', '4');
INSERT INTO EMP_DATA(EMPLOYEE_ID,EMPLOYEE_NAME,JOB_TITLE,MANAGER_ID,DATE_HIRED,SALARY,DEPARTMENT_ID)values('90003','Roxy Jones','Salesperson','90002','11/02/17','35000', '4');
INSERT INTO EMP_DATA(EMPLOYEE_ID,EMPLOYEE_NAME,JOB_TITLE,MANAGER_ID,DATE_HIRED,SALARY,DEPARTMENT_ID)values('90004','Selwyn Field','Salesperson','90003','20/05/15','32000', '4');
INSERT INTO EMP_DATA(EMPLOYEE_ID,EMPLOYEE_NAME,JOB_TITLE,MANAGER_ID,DATE_HIRED,SALARY,DEPARTMENT_ID)values('90005','David Hallett','Engineer','90006','17/04/18','40000', '2');
INSERT INTO EMP_DATA(EMPLOYEE_ID,EMPLOYEE_NAME,JOB_TITLE,MANAGER_ID,DATE_HIRED,SALARY,DEPARTMENT_ID)values('90006','Sarah','Manager','90001','21/03/15','45000', '2');
INSERT INTO EMP_DATA(EMPLOYEE_ID,EMPLOYEE_NAME,JOB_TITLE,MANAGER_ID,DATE_HIRED,SALARY,DEPARTMENT_ID)values('90007','Phelps Louise Harper','Engineer','90006','01/01/13','47000', '2');
INSERT INTO EMP_DATA(EMPLOYEE_ID,EMPLOYEE_NAME,JOB_TITLE,MANAGER_ID,DATE_HIRED,SALARY,DEPARTMENT_ID)values('90008','Tina Hart','Engineer','90009','28/07/14','45000', '3');
INSERT INTO EMP_DATA(EMPLOYEE_ID,EMPLOYEE_NAME,JOB_TITLE,MANAGER_ID,DATE_HIRED,SALARY,DEPARTMENT_ID)values('90009','Gus Jones','Manager','90001','15/05/18','50000', '3');
INSERT INTO EMP_DATA(EMPLOYEE_ID,EMPLOYEE_NAME,JOB_TITLE,MANAGER_ID,DATE_HIRED,SALARY,DEPARTMENT_ID)values('90010',' Mildred Hall','Secretary','90001','12/10/96','35000', '1');

---  Executable database object to allow an Employee to be created

CREATE or replace PROCEDURE EMP_CREATE (
  EMPLOYEE_ID NUMBER,
  EMPLOYEE_NAME VARCHAR2(50),
  JOB_TITLE VARCHAR2(50),
  MANAGER_ID NUMBER,
  DATE_HIRED DATE,
  SALARY NUMBER,
  DEPARTMENT_ID  NUMBER )
IS
BEGIN
 INSERT INTO EMP_DATA(EMPLOYEE_ID,EMPLOYEE_NAME,JOB_TITLE,MANAGER_ID,DATE_HIRED,SALARY,DEPARTMENT_ID)values(:EMPLOYEE_ID,:EMPLOYEE_NAME,:JOB_TITLE,:MANAGER_ID,:DATE_HIRED,:SALARY,:DEPARTMENT_ID);
COMMIT;
END;
/
EXECUTE EMP_CREATE('90011',' ZEENATH MAFITHA','ORACLE ENGINEER','90001','01/03/22','45000', '1');

---executable database object to allow the Salary for an Employee to be increased or decreased by a percentage

CREATE or replace PROCEDURE EMP_SALARY (
  IS_INCREMENT boolean,
  PERCENTAGE NUMBER,
  EMPLOYEE_ID  NUMBER )
IS
BEGIN
	IF :IS_INCREMENT THEN
		UPDATE EMP_DATA set(SALARY = ((SALARY)+(SALARY*(:PERCENTAGE)/100))) WHERE EMPLOYEE_ID = :EMPLOYEE_ID;
	ELSE
		UPDATE EMP_DATA set(SALARY = ((SALARY)-(SALARY*(:PERCENTAGE)/100))) WHERE EMPLOYEE_ID = :EMPLOYEE_ID;
	END IF;
	COMMIT;
END;
/
EXECUTE EMP_SALARY(TRUE,'15','90009');

---executable database object to allow the transfer of an Employee to a different Department

CREATE or replace PROCEDURE EMP_TRANSFER (
  DEPARTMENT_ID NUMBER,
  EMPLOYEE_ID  NUMBER )
IS
BEGIN
  UPDATE EMP_DATA SET (DEPARTMENT_ID = :DEPARTMENT_ID) WHERE EMPLOYEE_ID = :EMPLOYEE_ID;
COMMIT;
END;
/
EXECUTE EMP_TRANSFER('4','90009');

---executable database object to return the Salary for an Employee.
CREATE or replace PROCEDURE EMP_SALARY(
   EMPLOYEE_ID  NUMBER )
IS
BEGIN
 SELECT SALARY FROM EMP_DATA WHERE EMPLOYEE_ID = :EMPLOYEE_ID;
END;
/
EXECUTE EMP_SALARY('90009');


--- Report to show all Employees for a Department
select ED1.DEPARTMENT_ID, DD1.DEPARTMENT_NAME, (LISTAGG(ED1.EMPLOYEE_NAME, ',') WITHIN GROUP (ORDER BY ED1.DEPARTMENT_ID)) AS SALARY from EMP_DATA ED1, DEPT_DATA DD1 WHERE ED1.DEPARTMENT_ID = DD1.DEPARTMENT_ID  ORDER BY ED1.DEPARTMENT_ID;

--- Report to show the total of Employee Salary for a Department
select ED1.DEPARTMENT_ID, DD1.DEPARTMENT_NAME, sum(ED1.SALARY) AS SALARY from EMP_DATA ED1, DEPT_DATA DD1 WHERE ED1.DEPARTMENT_ID = DD1.DEPARTMENT_ID group by ED1.DEPARTMENT_ID ORDER BY ED1.DEPARTMENT_ID;














